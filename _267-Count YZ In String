//Without Recursion

class Solution {
    public int countYZ(String s) {
        int count = 0;
        String[] arr = s.toLowerCase().split("[^a-z]+");

        for (String str : arr) {
            if (str.endsWith("y") || str.endsWith("z")) {
                count++;
            }
        }

        return count;
    }
}


//Aliter

class Solution {
    public int countYZ(String str) {
        int count = 0;
        str = str.toLowerCase();

        for (int i = 0; i < str.length(); i++) {
            if (str.charAt(i) == 'y' || str.charAt(i) == 'z') {
                if (i == str.length() - 1 || !Character.isLetter(str.charAt(i + 1))) {
                    count++;
                }
            }
        }

        return count;
    }
}



//Using Recursion

class Solution {
    public int countYZ(String str) {
        return countYZHelper(str, 0);
    }

    private int countYZHelper(String str, int index) {
        if (index >= str.length()) {
            return 0; // Base case: reached the end of the string
        }

        if ((str.charAt(index) == 'y' || str.charAt(index) == 'z' || 
             str.charAt(index) == 'Y' || str.charAt(index) == 'Z') &&
            (index == str.length() - 1 || !Character.isLetter(str.charAt(index + 1)))) {
            return 1 + countYZHelper(str, index + 1); // Count this occurrence
        }

        return countYZHelper(str, index + 1); // Move to the next character
    }
}
