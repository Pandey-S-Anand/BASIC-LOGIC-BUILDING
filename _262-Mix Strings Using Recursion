//Without Using Recursion 

//Naive Implementation

class Solution{
   public String mixString(String a, String b) {
     int aLength=a.length(),bLength=b.length(),i=0,size=Math.min(aLength,bLength);
     StringBuilder result=new StringBuilder();
   
     while(i<size){
        result.append(a.charAt(i)).append(b.charAt(i));
        i++;
     }
   
     if(size==aLength){
        while(i<bLength){
          result.append(b.charAt(i++));
        }
     }
   
     if(size==bLength){
        while(i<aLength){
          result.append(a.charAt(i++));
        }
     }
   
     return result.toString();
   }
}

//Optimal Implementation

class Solution{
  public String mixString(String a, String b) {
    StringBuilder result = new StringBuilder();
    int i = 0, aLength = a.length(), bLength = b.length();
    
    while (i < aLength && i < bLength) {
        result.append(a.charAt(i)).append(b.charAt(i));
        i++;
    }
    
    result.append(a.substring(i)).append(b.substring(i));
    
    return result.toString();
  }
}




//Using Recursion

class Solution{
   public String mixString(String a, String b) {
     if(a.isEmpty()){
       return b;
     }
  
     if(b.isEmpty()){
       return a;
     }

    return ""+a.charAt(0)+b.charAt(0)+mixString(a.substring(1),b.substring(1));
   }
}
