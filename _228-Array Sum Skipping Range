//Without Using Recursion

class Solution {
    public int sum67(int[] arr) {
        int sum = 0;

        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == 6) {
                while (arr[i++] != 7)
            } else {
                sum += arr[i];
            }
        }

        return sum;
    }
}


//Using Recursion


class Solution {
    public int sum67(int[] arr) {
        if (arr.length == 0) {
            return 0;
        }

        if (arr[0] == 6) {
            int start = 1;
            while (arr[start] != 7) {
                start++;
            }
            return sum67(Arrays.copyOfRange(arr, start + 1, arr.length));
        }

        return arr[0] + sum67(Arrays.copyOfRange(arr, 1, arr.length));
    }
}


//Aliter

class Solution {
    public int sum67(int[] arr) {
        return sum67(arr, false);
    }

    private int sum67(int[] arr, boolean inRange) {
        if (arr.length == 0) {
            return 0;
        }

        if (arr[0] == 6) {
            return sum67(Arrays.copyOfRange(arr, 1, arr.length), true);
        }

        if (arr[0] == 7 && inRange) {
            return sum67(Arrays.copyOfRange(arr, 1, arr.length), false);
        }

        if (inRange) {
            return sum67(Arrays.copyOfRange(arr, 1, arr.length), true);
        }

        return arr[0] + sum67(Arrays.copyOfRange(arr, 1, arr.length), false);
    }
}
