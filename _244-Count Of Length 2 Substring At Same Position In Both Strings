//Using Recursion

class Solution {
    public int stringMatch(String str1, String str2) {
        return stringMatchHelper(str1, str2, 0);
    }

    private int stringMatchHelper(String str1, String str2, int index) {
        if (str1.length() - index < 2 || str2.length() - index < 2) {
            return 0; // Base case: if there are fewer than 2 characters remaining in either string
        }

        // Check if the first two characters from both strings match
        if (str1.charAt(index) == str2.charAt(index) && str1.charAt(index + 1) == str2.charAt(index + 1)) {
            return 1 + stringMatchHelper(str1, str2, index + 1); // If they match, count and continue
        }

        return stringMatchHelper(str1, str2, index + 1); // Otherwise, continue checking from the next index
    }
}


//Without Using Recursion

class Solution {
    public int stringMatch(String str1, String str2) {
        if (str1.length() < 2 || str2.length() < 2) {
            return 0;
        }

        int size = Math.min(str1.length(), str2.length());
        int count = 0;

        for (int i = 0; i < size - 1; i++) {
            if (str1.substring(i, i + 2).equals(str2.substring(i, i + 2))) {
                count++;
            }
        }

        return count;
    }
}
