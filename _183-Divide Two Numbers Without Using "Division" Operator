Method : Via Repeated Substraction

//Intuitive implementation

class Solution{
   public static String division(int dividend,int divisor) {//find (num1/num2)?
       if(divisor==0)
          return "Error!! Division Not Possible!! Divisor Cannot be Zero."; 
       else
       {
          System.out.printf("%d / %d => ",dividend,divisor); 
		       
          int signOfQuotient=1,signOfRemainder=1;
             
          if((dividend<0 && divisor>0) || (dividend>0 && divisor<0))
	            signOfQuotient=-1; //Quotient will be negative
	            
	        if(dividend<0) //remainder will be negative
              signOfRemainder=-1;
	          	
              
           divisor=Math.abs(divisor);
           dividend=Math.abs(dividend);
                 
	         int quotient=0;
           while(dividend>=divisor)
           {
              dividend=dividend-divisor;
              quotient++;
           }
                
	       int remainder=dividend; 
	
         return "Quotient= "+(quotient*signOfQuotient)+" and Remainder ="+remainder*signOfRemainder;  
       } 
    }
}


//Optimal Implementation

class Solution{
    public static String division(int dividend,int divisor){ //find (num1/num2)?
        if(divisor==0)
          return "Error!! Division Not Possible!! Divisor Cannot be Zero."; 
        else
        {
            System.out.printf("%d / %d => ",dividend,divisor); 
		
	          if(divisor==1)
	            return "Quotient= "+Integer.toString(dividend)+" and remainder = "+"0";
		        
	          if(divisor==-1 && dividend>0)
	            return "Quotient= "+Integer.toString(-dividend)+" and remainder = "+"0"; 
	          else if(divisor==-1 && dividend<0)
	            return "Quotient= "+Integer.toString(Math.abs(dividend))+" and remainder = "+"0"; 
	          	   
		       
            int signOfQuotient=1,signOfRemainder=1;
             
            if((dividend<0 && divisor>0) || (dividend>0 && divisor<0))
	             signOfQuotient=-1; //Quotient will be negative
	            
	          if(dividend<0) //remainder will be negative
               signOfRemainder=-1;
	          	
              
            divisor=Math.abs(divisor);
            dividend=Math.abs(dividend);
                 
	          int quotient=0;
            while(dividend>=divisor)
            {
               dividend=dividend-divisor;
               quotient++;
            }
                
	          int remainder=dividend; 
	
            return "Quotient= "+(quotient*signOfQuotient)+" and Remainder ="+remainder*signOfRemainder;  
        } 
    }
}
