//Using Recursion

class Solution {
    public String withoutString(String base, String remove) {
        return withoutString(base, remove, 0);
    }

    private String withoutString(String base, String remove, int index) {
        if ((base.length() - index) < remove.length()) {
            return base.substring(index);
        }

        if (base.toLowerCase().startsWith(remove.toLowerCase(), index)) {
            return withoutString(base, remove, index + remove.length());
        }

        return base.charAt(index) + withoutString(base, remove, index + 1);
    }
}


//Without Recursion

class Solution {
    public String withoutString(String base, String remove) {
        StringBuilder modifiedString = new StringBuilder();
        int i = 0;

        while (i < base.length()) {
            if (base.toLowerCase().startsWith(remove.toLowerCase(), i)) {
                i += remove.length();
            } else {
                modifiedString.append(base.charAt(i));
                i++;
            }
        }

        return modifiedString.toString();
    }
}
