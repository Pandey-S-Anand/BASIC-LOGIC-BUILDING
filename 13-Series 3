// 1/1! + 2/2! + 3/3! + 4/4! +......+ n/n!=?

//Bruteforce Approach

class Solution{
    public static float series(int n){
      if(n<=0) //invalid Input
        return -1;
        
      float sum=0f;
      for(int i=1;i<=n;i++)
        sum+=(float)i/factorial(i);
        
      return sum;
    }
    
    public static long factorial(int num)
    {
        long[]fact=new long[num+1];
        fact[0]=1;
        for(int i=1;i<=num;i++)
          fact[i]=fact[i-1]*i;
          
        return fact[num];
    }
}


//Optimal Approach

class Solution{
    public static float series(int n){
      if(n<=0) //invalid Input
        return -1;

      long[]fact=factorial(n);  
 
      float sum=0f;
      for(int i=1;i<=n;i++)
        sum+=(float)i/fact[i];
        
      return sum; 
    }
    
    public static long[] factorial(int num)
    {
        long[]fact=new long[num+1];
        fact[0]=1L;
        
        for(int i=1;i<=num;i++)
           fact[i]=fact[i-1]*i;
           
        return fact;   
    }
}
