/*Q-To Print
1                  1
12                21
123              321
1234            4321
12345          54321
123456        654321
1234567      7654321
12345678    87654321
123456789  987654321
12345678900987654321

*/

// Figure Specific Code

class Solution {
    public static void pattern() {
        for (int row = 1; row <= 10; row++) {
            int data = 1;
            for (int column = 1; column <= 20; column++) {
                if (column <= row || column >= (21 - row)) {
                    System.out.print(data % 10);
                    if (column < row) {
                        data++;
                    } else if (column > row) {
                        data--;
                    }
                } else {
                    System.out.print(" ");
                }
            }
            System.out.println();
        }
    }
}


// Generalized Code

class Solution {
    public static void pattern(int n) {
        for (int row = 1; row <= n; row++) {
            int data = 1;
            for (int column = 1; column <= (2 * n); column++) {
                if (column <= row || column >= ((2 * n) + 1 - row)) {
                    System.out.print(data % 10);
                    if (column < row) {
                        data++;
                    } else if (column > row) {
                        data--;
                    }
                } else {
                    System.out.print(" ");
                }
            }
            System.out.println();
        }
    }
}

