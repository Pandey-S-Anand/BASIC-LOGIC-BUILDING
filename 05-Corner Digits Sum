//Method 1

class Solution{
    public int corner_digitSum(int n){
       if(n<10)
         return n;

       return firstDigit(n)+lastDigit(n);
    }
    
    private static int firstDigit(int num){
       if(num<0)
          num=Math.abs(num);
          
       int cntDigit=(int)Math.floor(Math.log10(num) + 1);
       int temp=(int)Math.pow(10,cntDigit-1);
       int first=num/temp;
       
       return first;
    }
    
    private static int lastDigit(int num){
       return num%10;
    }
}

//Method 2

class Solution{
    public int corner_digitSum(int num){
       if(num<10)
         return num;

       String str=Integer.toString(num);

       int first=str.charAt(0)-'0';
       int last=str.charAt(str.length()-1)-'0';
       
       return first+last;
    }
}
