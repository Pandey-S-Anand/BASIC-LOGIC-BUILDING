//Bruteforce Approach

class Solution {
    public static void printFrequency(int arr[]) {
        Map<Integer, Integer> frequencyMap = new LinkedHashMap<>();

        for (int val : arr) {
            frequencyMap.put(val, frequencyMap.getOrDefault(val, 0) + 1);
        }

        for (int key : frequencyMap.keySet()) {
            System.out.println(key + "=>" + frequencyMap.get(key));
        }
    }
}


//Optimal Approach

class Solution {
    public void printFrequency(int[] arr) {
        int count = 1;
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] == arr[i - 1]) {
                count++;
            } else {
                System.out.println(arr[i - 1] + "=>" + count);
                count = 1;
            }
        }

        if (arr.length > 0) {
            System.out.println(arr[arr.length - 1] + "=>" + count);
        }
    }
}
