//Without Recursion

class Solution {
    public String endX(String str) {
        int countX = 0;
        StringBuilder modifiedString = new StringBuilder();

        for (int i = 0; i < str.length(); i++) {
            if (str.charAt(i) != 'x') {
                modifiedString.append(str.charAt(i));
            } else {
                countX++;
            }
        }

        while (countX != 0) {
            modifiedString.append("x");
            countX--;
        }

        return modifiedString.toString();
    }
}


//Using Recursion

class Solution {
    public String endX(String str) {
        return endXHelper(str, 0, "");
    }

    private String endXHelper(String str, int index, String result) {
        if (index == str.length()) {
            return result; // Base case: processed all characters
        }

        char currentChar = str.charAt(index);
        if (currentChar == 'x') {
            // Append 'x' to the end of the result string
            return endXHelper(str, index + 1, result) + 'x';
        }

        // Append the current character to the result string
        return currentChar + endXHelper(str, index + 1, result);
    }
}

/*

Recursive Tree for Test Case : "xxre"

endX("xxre")
  |
endX("xre")+'x'
  |
endX("re")+'x'
  |
'r'+endX("e")
        |
     'e'+endX("")
              |
          return "";  (base case, returns empty string)
*/
