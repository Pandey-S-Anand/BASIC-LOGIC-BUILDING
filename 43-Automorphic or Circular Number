/*
A number is called an automorphic number if and only if the square of the given number ends with the same number itself.
For example, 25, 76 are automorphic numbers because their square is 625 and 5776, respectively and the last two digits of the square represent the number itself.
Some other automorphic numbers are 5, 6, 36, 890625, etc.
*/
//Method 1

class Solution {
    public String checkAutomorphic(int number) {
        int digitCount = (int) Math.ceil(Math.log10(number));
        long square = (long) number * number;
        int lastDigits = (int) (square % (int) Math.pow(10, digitCount));

        if (lastDigits == number) {
            return "Automorphic";
        } else {
            return "Not Automorphic";
        }
    }
}


//Method 2

class Solution {
    public String checkAutomorphic(int number) {
        long square = (long) number * number;

        while (number != 0) {
            if ((number % 10) != (square % 10)) {
                return "Not Automorphic";
            }

            number /= 10;
            square /= 10;
        }

        return "Automorphic";
    }
}


//Method 3 (using BigInteger Class)

import java.math.BigInteger;

class Solution {
    public String checkAutomorphic(int number) {
        BigInteger bigSquare = BigInteger.valueOf(number).multiply(BigInteger.valueOf(number));
        BigInteger divisor = BigInteger.valueOf((int) Math.pow(10, (int) Math.ceil(Math.log10(number))));
        BigInteger lastDigits = bigSquare.remainder(divisor);

        if (lastDigits.equals(BigInteger.valueOf(number))) {
            return "Automorphic";
        } else {
            return "Not Automorphic";
        }
    }
}
