//Using Recursion

class Solution {
    public int last2(String str) {
        if (str.length() <= 2) {
            return 0; // No possible occurrences
        }

        String last2Chars = str.substring(str.length() - 2); // The last 2 characters to match
        return last2Helper(str, last2Chars, 0);
    }

    private int last2Helper(String str, String last2Chars, int index) {
        if (index > str.length() - 3) {
            return 0; // Base case: Not enough characters left to form a match
        }

        if (str.substring(index, index + 2).equals(last2Chars)) {
            return 1 + last2Helper(str, last2Chars, index + 1);
        }

        return last2Helper(str, last2Chars, index + 1);
    }
}


//Without Using Recursion

class Solution {
    public int last2(String str) {
        if (str.length() <= 2) {
            return 0;
        }

        int count = 0;
        String last2Char = str.substring(str.length() - 2, str.length());

        for (int i = 0; i < str.length() - 2; i++) {
            if (str.startsWith(last2Char, i)) {
                count++;
            }
        }

        return count;
    }
}
