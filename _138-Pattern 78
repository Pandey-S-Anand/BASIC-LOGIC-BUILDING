/*Q-To Print

1     
1 1    
1 2 1   
1 3 3 1  
1 4 6 4 1 

*/  
  
//Figure Specific Code

class Solution {
  public static void pattern78(){  
      for (int i = 1; i <= 5; i++)
      {
	  for(int j = 1; j <=5; j++)
	    if(j<=i)
	    {
	        long temp=factorial(i-1)/(factorial(i-j)*factorial(j-1));
	        System.out.print(temp+" ");
	    }
	    else
              System.out.print(" ");
		  
	 System.out.println ();
      } 
  }
  
  public static long factorial(int n)
  {
      long[] fact=new long[n+1];
      fact[0]=1L;

      for(int i=1;i<=n;i++)
        fact[i]=fact[i-1]*i;
	
      return fact[n];
  }
}



//Generalised Code

class Solution{
  public static void pattern79(int n){  
      for (int i = 1; i <=n; i++)
      {
	 for(int j = 1; j <=n; j++)
	    if(j<=i)
	    {
	       long temp=factorial(i-1)/(factorial(i-j)*factorial(j-1));
	       System.out.print(temp+" ");
	    }
	    else
              System.out.print(" ");
		 
	 System.out.println();
      } 
  }
  
  
  public static long factorial(int n)
  {
      long[] fact=new long[n+1];
      fact[0]=1L;

      for(int i=1;i<=n;i++)
        fact[i]=fact[i-1]*i;
	
      return fact[n];
  }
}
