//Using Recursion

class Solution{
   public String sameEnds(String str) {
    return sameEndsHelper(str, str.length() / 2);
   }

   private String sameEndsHelper(String str, int mid) {
      if (str.substring(0, mid).equals(str.substring(str.length() - mid))) {
        return str.substring(0, mid);
      }
    
     return sameEndsHelper(str, mid - 1);
   }
}


//Without Recursion

class Solution {
    public String sameEnds(String str) {
        for (int i = str.length() / 2; i >= 0; i--) {
            if (str.substring(0, i).equals(str.substring(str.length() - i))) {
                return str.substring(0, i);
            }
        }

        return "";
    }
}

//Aliter

class Solution {
    public String sameEnds(String str) {
        String left = str.substring(0, str.length() / 2);
        String right;
        if (str.length() % 2 == 0) {
            right = str.substring(str.length() / 2);
        } else {
            right = str.substring((str.length() / 2) + 1);
        }

        while (!left.equals(right)) {
            left = left.substring(0, left.length() - 1);
            right = right.substring(1);
        }

        return left;
    }
}
