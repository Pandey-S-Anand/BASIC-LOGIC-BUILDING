//Bruteforce Approach

class Solution {
    static int countFactors(int num) {
        int count = 0;
        for (int i = 1; i <= num; i++) {
            if ((num % i) == 0) {
                count++;
            }
        }

        return count;
    }
}


//Better Approach

class Solution {
    static int countFactors(int num) {
        int count = 2;

        for (int i = 2; i <= (num / 2); i++) {
            if ((num % i) == 0) {
                count++;
            }
        }

        return count;
    }
}


//Optimal Approach

class Solution {
    static int countFactors(int n) {
        int count = 0, sqrRoot = (int) Math.sqrt(n);
        for (int i = 1; i <= sqrRoot; i++) {
            if (n % i == 0) {
                if (i == (n / i)) {
                    count++;
                } else {
                    count += 2;
                }
            }
        }

        return count;
    }
}
