/*

Enter N:10

       *******             *******       
     ***********         ***********     
    *************       *************    
   ***************     ***************   
  *****************   *****************  
 ******************* ******************* 
 ******************* ******************* 
*****************************************
*****************************************
*****************************************
 ***************************************
  *************************************
   ***********************************
    *********************************
     *******************************
      *****************************
       ***************************
        *************************
         ***********************
          *********************
           *******************
            *****************
             ***************
              *************
               ***********
                *********
                 *******
                  *****
                   ***
                    *

*/


class Solution {  
    public static void pattern(int size) {
        // Nested loop to print the upper part of the heart
        for (int row = 0; row < size; row++) {  
            for (int column = 0; column <= (4 * size); column++) {  
                double pos1 = Math.sqrt(Math.pow(row - size, 2) + Math.pow(column - size, 2));  
                double pos2 = Math.sqrt(Math.pow(row - size, 2) + Math.pow(column - 3 * size, 2));  

                if (pos1 < (size + 0.5) || pos2 < (size + 0.5)) {  
                    System.out.print("*");  
                } else {  
                    System.out.print(" ");  
                }  
            }  
            System.out.println();  
        }  

        // Loop to print the lower part of the heart
        for (int row = 1; row <= 2 * size; row++) {  
            for (int column = 0; column < row; column++) {  
                System.out.print(" ");  
            }  

            for (int column = 0; column < ((4 * size) - (2 * row) + 1); column++) {  
                System.out.print("*");  
            }  

            System.out.println(); 
        }  
    }  
}
