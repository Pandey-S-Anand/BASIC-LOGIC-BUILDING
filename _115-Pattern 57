/*Q-To Print

*      
*1*    
*121*  
*12321*
*121*  
*1*    
*       

*/

// Figure Specific Code

class Solution {
    public static void pattern() {
        int k = 0;
        for (int row = 1; row <= 7; row++) {
            if (row <= 4) {
                k++;
            } else {
                k--;
            }

            int data = 1;
            for (int column = 1; column <= 7; column++) {
                if (column <= (2 * k) - 1) {
                    if (column == (2 * k) - 1 || column == 1) {
                        System.out.print("*");
                    } else {
                        System.out.print(data);
                        if (column < k) {
                            data++;
                        } else {
                            data--;
                        }
                    }
                } else {
                    System.out.print(" ");
                }
            }

            System.out.println();
        }
    }
}


// Generalized Code

class Solution {
    public static void pattern(int n) {
        int k = 0;
        int middle = (n + 1) / 2;
        for (int row = 1; row <= n; row++) {
            if (row <= middle) {
                k++;
            } else {
                k--;
            }

            int data = 1;
            for (int column = 1; column <= n; column++) {
                if (column <= (2 * k) - 1) {
                    if (column == (2 * k) - 1 || column == 1) {
                        System.out.print("*");
                    } else {
                        System.out.print(data);
                        if (column < k) {
                            data++;
                        } else {
                            data--;
                        }
                    }
                } else {
                    System.out.print(" ");
                }
            }

            System.out.println();
        }
    }
}
