//Method 1- Iterative Approach

class Solution{
    public static int reverse(int num){
        int rev=0;
        while(num!=0)
        {
           int last=(num%10);
           rev=rev*10+last; 
           num=num/10;
        }
        return rev;
    }
}

//Method 2- Using StringBuilder

class Solution{
    public static int reverse(int num){
        int sign=1;      
        if(num<0)
        {
          num=Math.abs(num);
          sign=-1;  
        }

        //Integer => String => StringBuilder
       	StringBuilder sb = new StringBuilder(Integer.toString(num));
        
        //Reverse the String Builder
	      sb.reverse();
        
        //StringBuilder => String => Integer
	      num = Integer.parseInt(sb.toString());

	      return num*sign;
    }
}


//Method3- Recurssive Approach

//Implementaton 1

class Solution{
    public static int driver(int num){
       return reverse(num,0);
    }

    public static int reverse(int num,int rev){
        if(num==0)
          return rev;
        
        return reverse(num/10,rev*10+(num%10));
    }
}

//Implementaton 2

class Solution{   
    static int rev=0;

    public static void reverse(int num){
       if(num==0)
        return;
          
       rev=rev*10+(num%10);
       reverse(num/10);
    }
}
