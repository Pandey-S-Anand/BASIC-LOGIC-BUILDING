//Bruteforce Approach

class Solution {
    public void zeroMax(int n, int[] arr) {
        for (int i = 0; i < n; i++) {
            if (arr[i] == 0) {
                int maxOdd = arr[i];
                for (int j = i + 1; j < n; j++) {
                    if (arr[j] % 2 != 0 & (arr[j] > maxOdd)) {
                        maxOdd = arr[j];
                    }
                }

                arr[i] = maxOdd;
            }
        }
    }
}


// Optimal Approach

class Solution {
    public void zeroMax(int n, int[] arr) {
        int largestOddFoundSoFar = -1;

        for (int i = n - 1; i >= 0; i--) {
            if (arr[i] == 0 && largestOddFoundSoFar != -1) {
                arr[i] = largestOddFoundSoFar; // Replace 0 with the largest odd number on right else leave it as it is
            }
            if ((arr[i] % 2) != 0 && arr[i] > largestOddFoundSoFar) {
                largestOddFoundSoFar = arr[i]; // Update the largest odd number
            }
        }
    }
}
