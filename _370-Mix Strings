//Without Using Recursion 

//Naive Implementation

class Solution {
    public String mixString(String str1, String str2) {
        int i = 0, j = 0;
        StringBuilder mixedString = new StringBuilder();

        while (i < str1.length() && j < str2.length()) {
            mixedString.append(str1.charAt(i++)).append(str2.charAt(j++));
        }

        while (i < str1.length()) {
            mixedString.append(str1.charAt(i++));
        }

        while (j < str2.length()) {
            mixedString.append(str2.charAt(j++));
        }

        return mixedString.toString();
    }
}


//Aliter

class Solution {
    public String mixString(String str1, String str2) {
        int i = 0, j = 0;
        StringBuilder mixedString = new StringBuilder();

        while (i < str1.length() && j < str2.length()) {
            mixedString.append(str1.charAt(i++)).append(str2.charAt(j++));
        }

        mixedString.append(str1.substring(i)).append(str2.substring(j));

        return mixedString.toString();
    }
}


//Using Recursion

class Solution {
    public String mixString(String str1, String str2) {
        if (str1.isEmpty()) {
            return str2;
        }

        if (str2.isEmpty()) {
            return str1;
        }

        return Character.toString(str1.charAt(0)) + str2.charAt(0) + mixString(str1.substring(1), str2.substring(1));
    }
}
