//Without Recursion

class Solution{
  public String wordEnds(String str, String word) {  
    StringBuilder result=new StringBuilder();
    int index,strLen=str.length(),wordLen=word.length();

    for(int i=0;i<=(strLen-wordLen);i=index+wordLen){
      index=str.indexOf(word,i);

      if(index==-1){
        break;
      }
    
      result.append(index==0?"":str.charAt(index-1)).append((index+wordLen)==strLen?"":str.charAt(index+wordLen));
    }
  
    return result.toString();
  }
}


//Aliter

class Solution{
   public String wordEnds(String str, String word) {
     StringBuilder result = new StringBuilder();
     int strLen = str.length(),wordLen = word.length();
    
     for (int i = 0; i <= (strLen - wordLen); i++) {
        if (str.startsWith(word, i)) {
            if (i > 0) {
                result.append(str.charAt(i - 1));
            }
            if (i < (strLen - wordLen)) {
                result.append(str.charAt(i + wordLen));
            }
        }
     }
    
     return result.toString();
   }
}


//Using Recursion

//Intuitive Implementation

class Solution{
   public String wordEnds(String str, String word) {
     return wordEndsHelper(str,word,0);
   }
   
   public String wordEndsHelper(String str,String word,int index){
      if((index+word.length())>str.length() || (str.startsWith(word,index) && index==0 && (index+word.length()==str.length()))){
         return "";
      }

      if(str.startsWith(word,index) && index==0){
         return ""+str.charAt(index+word.length())+wordEndsHelper(str,word,index+word.length());
      }
      
      if(str.startsWith(word,index) && (index+word.length())==str.length()){
         return ""+str.charAt(index-1)+ wordEndsHelper(str,word,index+word.length());
      }
      
      if(str.startsWith(word,index)){
        return ""+str.charAt(index-1)+str.charAt(index+word.length())+wordEndsHelper(str,word,index+word.length());
      }
      
      return wordEndsHelper(str,word,index+1);
   }
}



//Optimal Implementation

class Solution{
  public String wordEnds(String str, String word) {
    return wordEndsHelper(str,word,0);
  }
   
  public String wordEndsHelper(String str,String word,int index){
      if((index+word.length())>str.length()){
        return "";
      }
     
      if(str.startsWith(word,index))
      {
        String front=index==0?"":String.valueOf(str.charAt(index-1));
        String back=(index+word.length())==str.length()?"":String.valueOf(str.charAt(index+word.length()));
        
        return front+back+wordEndsHelper(str,word,index+word.length());
      }
      
      return wordEndsHelper(str,word,index+1);
  }
}
