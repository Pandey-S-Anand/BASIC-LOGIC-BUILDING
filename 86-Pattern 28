/*Q-To Print

1        
3*2      
4*5*6    
10*9*8*7  
11*12*13*14*15

*/

// Figure Specific

class Solution {
    public static void pattern() {
        int start = 0;
        for (int row = 1; row <= 5; row++) {
            if ((row % 2) != 0) {
                start = start + 1;
            } else {
                start = start + 2 * (row - 1);
            }

            int data = start;
            boolean flag = true;
            for (int column = 1; column <= 9; column++) {
                if (column <= (2 * row) - 1) {
                    if (flag) {
                        System.out.print(data);
                        data = ((row % 2) != 0) ? data + 1 : data - 1; 
                    } else {
                        System.out.print("*");
                    }

                    flag = !flag;
                } else {
                    System.out.print(" ");
                }
            }
            System.out.println();
        }
    }
}


// Generalized Code

class Solution {
    public static void pattern(int n) {
        int start = 0;
        for (int row = 1; row <= n; row++) {
            if ((row % 2) != 0) {
                start = start + 1;
            } else {
                start = start + 2 * (row - 1);
            }

            int data = start;
            boolean flag = true;
            for (int column = 1; column <= (2 * n) - 1; column++) {
                if (column <= (2 * row) - 1) {
                    if (flag) {
                        System.out.print(data);
                        data = ((row % 2) != 0) ? data + 1 : data - 1;
                    } else {
                        System.out.print("*");
                    }

                    flag = !flag;
                } else {
                    System.out.print(" ");
                }
            }
            System.out.println();
        }
    }
}
