//Without Recursion

class Solution {
    public String getSandwich(String str) {
        if (str.length() < 5) {
            return ""; // no bread found
        }
        
        int firstIndex = str.indexOf("bread");
        if (firstIndex == -1) {
            return "";
        }

        int lastIndex = str.lastIndexOf("bread");
        if (lastIndex == firstIndex) {
            return "";
        }

        return str.substring(firstIndex + 5, lastIndex);
    }
}


//Using Recursion

class Solution {
    public String getSandwich(String str) {
        return getSandwichHelper(str, 0, str.length() - 1);
    }

    private String getSandwichHelper(String str, int start, int end) {
        if (end - start + 1 < 10) { // At least two "bread" (5 + 5) required to form a sandwich
            return "";
        }

        if (str.startsWith("bread", start) && str.startsWith("bread", end - 4)) {
            return str.substring(start + 5, end - 4); // Found sandwich
        }

        if (!str.startsWith("bread", start)) {
            return getSandwichHelper(str, start + 1, end); // Move start forward
        }

        return getSandwichHelper(str, start, end - 1); // Move end backward
    }
}
