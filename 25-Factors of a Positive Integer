/*
- A factor of a number in math is a number that divides the given number. Hence, a factor is nothing but a divisor of the given number. 

- A factor of a number is always less than or equal to the given number.
  i.e Range :  (+1 or -1) <= (factor of number) <= (+num or -num)
  Ex- the factors are 8 are actually 1, -1, 2, -2, 4, -4, 8 and -8. 
  But when it comes to problems related to the factors, only positive numbers are considered, that too a whole number and a non-fractional number.
  (Ex : 2.5 is factor of 5 but it's not considered coz its fractional in nature)
  
- Every number except 0 and 1 has at least two factors, 1 and itself.

- Zero is not the factor of any number because if we divide a number by zero, the value is not defined.

- The number of factors of a number is finite.

*/

//Bruteforce Approach

class Solution {
    public static void factors(int num) {
        for (int i = 1; i <= num; i++) {
            if ((num % i) == 0) {
                System.out.println(i);
            }
        }
    }
}


//Better Approach

class Solution {
    public static void factors(int num) {
        System.out.println(1);

        for (int i = 2; i <= (num / 2); i++) {
            if ((num % i) == 0) {
                System.out.println(i);
            }
        }

        System.out.println(num);
    }
}


//Optimal Approach
/*
Ex- n=100

The divisors/Factors of 100 are: 1 2 4 5 10 20 25 50 100.
     
If we look carefully, all the divisors are present in pairs. For example if n = 100,
then the various pairs of divisors are: (1,100),   (2,50),   (4,25),    (5,20),   (10,10).
                                            |        |          |          |          |
                                        (1,100/1) (2,100/2) (4,100/4)  (5,100/5) (10,100/10)
so all we need to do is generate 1,2,4,5 and 10 which can be generated by Running a loop from 1 to Sqrt(n) (both Inclusive).
Using this fact we could speed up our program significantly. We,however, have to be careful if there are two equal divisors as in the case of (10, 10).
In such case, weâ€™d print only one of them. 

Below is an implementation for the same:
*/

class Solution {
    public static void factors(int num) {
        int sqrRoot = (int) Math.sqrt(num);
        for (int i = 1; i <= sqrRoot; i++) {
            if (num % i == 0) {
                if ((num / i) == i) { // If divisors are equal, print only one
                    System.out.print(" " + i);
                } else {// Otherwise print both
                    System.out.print(i + " " + (num / i) + " ");
                }
            }
        }
    }
}
