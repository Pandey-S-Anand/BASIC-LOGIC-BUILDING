//Without Recursion

class Solution {
    public boolean noTriples(int[] arr) {
        if (arr.length < 3) {
            return true;
        }

        for (int i = 0; i < arr.length - 2; i++) {
            if (arr[i] == arr[i + 1] && arr[i + 1] == arr[i + 2]) {
                return false;
            }
        }

        return true;
    }
}


//Using Resursion

class Solution {
    public boolean noTriples(int[] arr) {
        return noTriples(arr, 0);
    }

    private boolean noTriples(int[] arr, int index) {
        if (index + 2 >= arr.length) {
            return true; // Base case: fewer than 3 elements left
        }

        if (arr[index] == arr[index + 1] && arr[index + 1] == arr[index + 2]) {
            return false; // Found a triple
        }

        return noTriples(arr, index + 1); // Check the rest of the array
    }
}
